{"ast":null,"code":"var _jsxFileName = \"/Users/Varun/Data/Workspace/The career path/React/pic-some/src/Context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Context = /*#__PURE__*/React.createContext();\n\nfunction ContextProvider(props) {\n  _s();\n\n  const [allPhotos, setAllPhotos] = useState([]);\n  const [cartItems, setCartItems] = useState([]);\n  const imgUrl = 'https://raw.githubusercontent.com/bobziroll/scrimba-react-bootcamp-images/master/images.json';\n  useEffect(() => {\n    fetch(imgUrl).then(response => response.json()).then(data => setAllPhotos(data));\n  }, []);\n\n  function toggleFavorite(id) {\n    const updatedArr = allPhotos.map(photo => {\n      if (photo.id === id) {\n        return { ...photo,\n          isFavorite: !photo.isFavorite\n        };\n      }\n\n      return photo;\n    });\n    setAllPhotos(updatedArr);\n  }\n\n  function addToCart(image) {\n    const cartItem = allPhotos.filter(photo => photo.id === image.id);\n    const updatedCartArr = { ...cartItems,\n      ...cartItem\n    };\n    setCartItems(updatedCartArr);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      allPhotos,\n      toggleFavorite,\n      addToCart\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ContextProvider, \"yMxJZIYmmjA+8sKWgx9HPtjRXzU=\");\n\n_c = ContextProvider;\nexport { ContextProvider, Context };\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["/Users/Varun/Data/Workspace/The career path/React/pic-some/src/Context.js"],"names":["React","useState","useEffect","Context","createContext","ContextProvider","props","allPhotos","setAllPhotos","cartItems","setCartItems","imgUrl","fetch","then","response","json","data","toggleFavorite","id","updatedArr","map","photo","isFavorite","addToCart","image","cartItem","filter","updatedCartArr","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAyBC,SAAzB,QAAyC,OAAzC;;AAEA,MAAMC,OAAO,gBAAGH,KAAK,CAACI,aAAN,EAAhB;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAA+B;AAAA;;AAC3B,QAAM,CAACC,SAAD,EAAaC,YAAb,IAA6BP,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM,CAACQ,SAAD,EAAWC,YAAX,IAA2BT,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAMU,MAAM,GAAG,8FAAf;AAEAT,EAAAA,SAAS,CAAC,MAAI;AACVU,IAAAA,KAAK,CAACD,MAAD,CAAL,CACKE,IADL,CACUC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EADpB,EAEKF,IAFL,CAEUG,IAAI,IAAER,YAAY,CAACQ,IAAD,CAF5B;AAGH,GAJQ,EAIP,EAJO,CAAT;;AAMA,WAASC,cAAT,CAAwBC,EAAxB,EAA4B;AACxB,UAAMC,UAAU,GAAGZ,SAAS,CAACa,GAAV,CAAcC,KAAK,IAAI;AACtC,UAAGA,KAAK,CAACH,EAAN,KAAWA,EAAd,EAAiB;AACb,eAAO,EAAC,GAAGG,KAAJ;AAAWC,UAAAA,UAAU,EAAC,CAACD,KAAK,CAACC;AAA7B,SAAP;AACH;;AACD,aAAOD,KAAP;AACH,KALkB,CAAnB;AAMAb,IAAAA,YAAY,CAACW,UAAD,CAAZ;AACH;;AAED,WAASI,SAAT,CAAmBC,KAAnB,EAA0B;AACtB,UAAMC,QAAQ,GAAGlB,SAAS,CAACmB,MAAV,CAAiBL,KAAK,IAAIA,KAAK,CAACH,EAAN,KAAWM,KAAK,CAACN,EAA3C,CAAjB;AACA,UAAMS,cAAc,GAAE,EAAC,GAAGlB,SAAJ;AAAc,SAAGgB;AAAjB,KAAtB;AACAf,IAAAA,YAAY,CAACiB,cAAD,CAAZ;AACH;;AAED,sBACI,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AAACpB,MAAAA,SAAD;AAAWU,MAAAA,cAAX;AAA0BM,MAAAA;AAA1B,KAAzB;AAAA,cACKjB,KAAK,CAACsB;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAjCQvB,e;;KAAAA,e;AAmCT,SAAQA,eAAR,EAA0BF,OAA1B","sourcesContent":["import React,{useState , useEffect} from 'react'\n\nconst Context = React.createContext()\n\nfunction ContextProvider(props){\n    const [allPhotos , setAllPhotos] = useState([])\n    const [cartItems,setCartItems] = useState([])\n    const imgUrl = 'https://raw.githubusercontent.com/bobziroll/scrimba-react-bootcamp-images/master/images.json'\n    \n    useEffect(()=>{\n        fetch(imgUrl)\n            .then(response=>response.json())\n            .then(data=>setAllPhotos(data))\n    },[])\n\n    function toggleFavorite(id) {\n        const updatedArr = allPhotos.map(photo => {\n            if(photo.id===id){\n                return {...photo, isFavorite:!photo.isFavorite}\n            }\n            return photo\n        })\n        setAllPhotos(updatedArr)\n    }\n\n    function addToCart(image) {\n        const cartItem = allPhotos.filter(photo => photo.id===image.id)\n        const updatedCartArr ={...cartItems,...cartItem}\n        setCartItems(updatedCartArr)\n    }\n\n    return(\n        <Context.Provider value={{allPhotos,toggleFavorite,addToCart}}>\n            {props.children}\n        </Context.Provider>\n    )\n\n}\n\nexport {ContextProvider , Context}"]},"metadata":{},"sourceType":"module"}